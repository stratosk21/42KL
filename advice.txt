#include <stdio.h>
#include <unistd.h>

void ft_putsrt(char *str);

void ft_putstr(char c)
{
    while(c != '\0')
    {
        write(1, &c, 1);
    }
}

char[4] = {1,2,3,4,\0}
string

i = 0 i <= 7/9
j = i + 1 
k = j + 1

i 
j 
k 
l 

while(i <= 9){ 0
 i = 0
    while(j < 9){ 0
        j = 0
        while(k <= 9){
            l = 0
            while(l <= 9){
                write(1, &l, 1);
                l++;
            }
            k++;
        }
        j++;
    }
    i++;
}

k = 0
while(k <= 9){
    k++;
    l = 0
    while(l <= 9){
        l++
        write(1, &i, 1);
        write(1, &j, 1);
        write(1, &k, 1);
        write(1, &l, 1);
    }
}

int i = 0;

int i;

i = 0;

gcc ft_putstr.c main.c
./a.out

to understand who is dependant on who

norminette

ft_putstr.c !OK

//Create a function that takes a pointer to int as a parameter, and sets the value "42" to that int.
void ft_ft(int *nbr);

int main()
{
    0ex576 -> 42
    int i = 42;
    int *j = &i;
    ft_ft(j);
}

int *nbr = 0ex576;
*nbr = 

void ft_ft(int *nbr){
    cout<<*nbr<<endl;
}

void ft_ultimate_ft(int *********nbr);

int main(){
    int i = 42;
    int *********j = &i;
    ft_ultimate_ft(j);
}

1a -> 2a -> 3a -> 4a -> 5a -> 6a -> 7a -> 8a -> 9a -> 42

void ft_ultimate_ft(int *********nbr){
    cout<<*********nbr<<endl;
}

//Create a function that swaps the value of two integers whose addresses are entered as parameters.
void ft_swap(int *a, int *b);

int main(){
    int i = 1
    int j = 2
    int* a = &i //x0asdas
    int* b = &j //x0casas

    ft_swap(a,b)
    cout<<*a<<endl //4
}

void ft_swap(int *a, int *b){
    // *a = 4
    int c = *b
    *b = *a
    *a = c

    a   a   b
    3 = 1 + 2
    1 = 3 - 2

    3 = 1 + 2
    1 = 3 - 2
    2 = 3 - 1

    *a = *a + *b
    *b = *a - *b
    *a = *a - *b

    int *c = int *b
    int *b = int *a
    int *a = int *c
}

x < 5 functions
x < 1 function < 25 lines
